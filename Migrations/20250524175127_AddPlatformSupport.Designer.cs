// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StreamTracker.Models;

#nullable disable

namespace StreamTracker.Migrations
{
    [DbContext(typeof(StreamTrackerDbContext))]
    [Migration("20250524175127_AddPlatformSupport")]
    partial class AddPlatformSupport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StreamTracker.Models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EpisodeNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TimeStopped")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("VideoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Episodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EpisodeNumber = 1,
                            Name = "Episode 1",
                            Rating = 5,
                            Season = 1,
                            Status = "Watching",
                            TimeStopped = "00:15:30",
                            UserId = 1,
                            VideoId = 1
                        });
                });

            modelBuilder.Entity("StreamTracker.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Netflix"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Disney+"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Crunchyroll"
                        },
                        new
                        {
                            Id = 4,
                            Name = "HiDive"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Apple TV+"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Hulu"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Amazon Prime Video"
                        },
                        new
                        {
                            Id = 8,
                            Name = "HBO Max"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Peacock"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Paramount+"
                        },
                        new
                        {
                            Id = 11,
                            Name = "YouTube"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Tubi"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Pluto TV"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Crackle"
                        },
                        new
                        {
                            Id = 15,
                            Name = "The Roku Channel"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Freevee"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Funimation"
                        },
                        new
                        {
                            Id = 18,
                            Name = "VRV"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Twitch"
                        },
                        new
                        {
                            Id = 20,
                            Name = "TikTok"
                        });
                });

            modelBuilder.Entity("StreamTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "sample@example.com",
                            UserUid = "firebase-uid-123",
                            Username = "sampleuser"
                        });
                });

            modelBuilder.Entity("StreamTracker.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a sample video.",
                            Genre = "Drama",
                            Rating = 4,
                            ReleaseYear = 2020,
                            Status = "Watching",
                            Title = "Sample Show",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("StreamTracker.Models.VideoUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PlatformId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VideoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoUrls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlatformId = 1,
                            Url = "https://netflix.com/sample-show",
                            VideoId = 1
                        });
                });

            modelBuilder.Entity("StreamTracker.Models.VideoUrl", b =>
                {
                    b.HasOne("StreamTracker.Models.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamTracker.Models.Video", null)
                        .WithMany("VideoUrls")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("StreamTracker.Models.Video", b =>
                {
                    b.Navigation("VideoUrls");
                });
#pragma warning restore 612, 618
        }
    }
}
